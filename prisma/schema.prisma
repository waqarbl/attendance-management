// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int          @id @default(autoincrement())
  name           String
  email          String       @unique
  password       String
  role           Role         @default(USER) // Role is defined as an enum
  attendances    Attendance[] // One-to-many relation with Attendance
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId Int?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Organization {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  // attendances Attendance[] // One-to-many relation with Attendance
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User[]
}


model Attendance {
  id                Int       @id @default(autoincrement())
  user              User      @relation(fields: [userId], references: [id])
  userId            Int
  signInTime        DateTime?
  signOutTime       DateTime?
  date              DateTime  @default(now()) // Tracks the day of attendance
  isLate            Boolean?  @default(false) // Indicates if the user was late
  isEarlyLeave      Boolean?  @default(false) // Indicates if the user left early
  lateDuration      String?      // Tracks how many minutes the user was late
  earlyLeaveDuration String?     // Tracks how many minutes the user left early
}



enum Role {
  USER
  ADMIN
}
